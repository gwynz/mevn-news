{"remainingRequest":"/home/gwyn/Documents/gwnz/mevn-character-generator/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gwyn/Documents/gwnz/mevn-character-generator/client/src/components/Admin.vue?vue&type=template&id=1fd8a062&","dependencies":[{"path":"/home/gwyn/Documents/gwnz/mevn-character-generator/client/src/components/Admin.vue","mtime":1598619575894},{"path":"/home/gwyn/Documents/gwnz/mevn-character-generator/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gwyn/Documents/gwnz/mevn-character-generator/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/gwyn/Documents/gwnz/mevn-character-generator/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gwyn/Documents/gwnz/mevn-character-generator/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}